name: "24-Hour Key Rotation System"

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:      # Allows manual triggering

env:
  GIST_ID: "c8d41aaaccf3f186d16f5a955c2d44cd"  # Your Gist ID
  KEY_FILE: "key.txt"    # Must match your Gist filename

jobs:
  rotate_key:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Generate a new secure key
    - name: Generate access key
      id: generate_key
      run: |
        # Generate 32-character alphanumeric key
        NEW_KEY=$(openssl rand -base64 24 | tr -dc 'a-zA-Z0-9' | head -c 32)
        echo "KEY=$NEW_KEY" >> $GITHUB_ENV
        echo "::add-mask::$NEW_KEY"  # Hide key in logs
        echo "TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        
    # Step 2: Update the Gist
    - name: Update Gist
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GIST_UPDATE_TOKEN }}
        script: |
          const { KEY, TIMESTAMP } = process.env;
          const expiry = new Date(new Date(TIMESTAMP).getTime() + 86400000).toUTCString();
          
          try {
            await github.rest.gists.update({
              gist_id: process.env.GIST_ID,
              description: `üîë Key updated on ${TIMESTAMP}`,
              files: {
                [process.env.KEY_FILE]: {
                  content: [
                    '# üîë AUTO-GENERATED ACCESS KEY',
                    `# ‚ö†Ô∏è VALID FOR 24 HOURS ONLY`,
                    '',
                    `KEY: ${KEY}`,
                    `GENERATED: ${TIMESTAMP}`,
                    `EXPIRES: ${expiry}`,
                    '',
                    '‚ö†Ô∏è WARNING:',
                    '- This key automatically refreshes daily',
                    '- Do not share or commit this key',
                    '- Do not use for production without additional security'
                  ].join('\n')
                }
              }
            });
            console.log('‚úÖ Gist updated successfully');
          } catch (error) {
            core.setFailed(`‚ùå Failed to update Gist: ${error.message}`);
          }
    
    # Step 3: Verification
    - name: Confirm update
      run: |
        echo "Key rotation completed successfully!"
        echo "View updated Gist:"
        echo "https://gist.github.com/IYceA/$GIST_ID"
